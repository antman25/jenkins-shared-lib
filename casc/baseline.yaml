credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              description: "ARITIFACTORY_CRED"
              id: "ARTIFACTORY_CRED"
              password: not-real-password
              scope: GLOBAL
              username: "jenkins"
          - usernamePassword:
              description: "BITBUCKET_CRED"
              id: "BITBUCKET_CRED"
              password: not-real-password
              scope: GLOBAL
              username: "jenkins"
          - fileSystemServiceAccountCredential:
              id: "kubernetes-svc-account-token-id"
              scope: GLOBAL
jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  authorizationStrategy:
    projectMatrix:
      permissions:
        - "GROUP:Overall/Read:authenticated"
        - "USER:Overall/Administer:admin"
        - "USER:Overall/Administer:antman"
  clouds:
    - kubernetes:
        containerCap: 10
        containerCapStr: "10"
        credentialsId: "kubernetes-svc-account-token-id"
        jenkinsTunnel: "jenkins-agent.workflow.svc.cluster.local:50000"
        jenkinsUrl: "http://jenkins.workflow.svc.cluster.local:8080"
        name: "k3s-cluster1"
        namespace: "workflow"
        podLabels:
          - key: "jenkins/jenkins-agent-podlbl"
            value: "true"
        serverCertificate: |
          -----BEGIN CERTIFICATE-----
          MIIBdzCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
          dmVyLWNhQDE2NzU3NTAxNjcwHhcNMjMwMjA3MDYwOTI3WhcNMzMwMjA0MDYwOTI3
          WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NzU3NTAxNjcwWTATBgcqhkjO
          PQIBBggqhkjOPQMBBwNCAASQ1a4PXs/g0AezNNH6HlTdi9An74mfSwY5EnEfLHh3
          ud+k0k5kOAPaQhwcKtDS+yQEf+ot4+5Jbzs0QtXv7aYMo0IwQDAOBgNVHQ8BAf8E
          BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUT3Hi7SHFkF8Hewp6FB7E
          vvS+4UkwCgYIKoZIzj0EAwIDSAAwRQIgGIQ9t8NXHXAVaJOIWOHr0+ffu+xgySFU
          OOKtvrHl/2kCIQCpKlxjcILLbACC/leH0gNLRWx/HOKYkp0gMvmjnWuTTg==
          -----END CERTIFICATE-----
        serverUrl: "https://kubernetes.default"
        templates:
          - id: "e2b3aa84-5ca9-4336-b8e7-a64203ba3f66"
            name: "default-jnlp"
            namespace: "workflow"
            workspaceVolume:
              dynamicPVC:
                accessModes: "ReadWriteOnce"
                requestsSize: "13Gi"
                storageClassName: "longhorn-retain"
            yamlMergeStrategy: "override"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  globalNodeProperties:
    - envVars:
        env:
          - key: "TOOLS_URL"
            value: "https://github.com/antman25/jenkins-shared-lib.git"
          - key: "JOB_TESTING_ROOT"
            value: "job-testing"
          - key: "DELIVERY_BRANCH"
            value: "main"
  labelAtoms:
    - name: "built-in"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 15
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
        - id: "admin"
          name: "Jenkins Admin"
          properties:
            - "apiToken"
            - "mailer"
            - "myView"
            - preferredProvider:
                providerId: "default"
            - "timezone"
        - id: "antman"
          name: "antman"
          properties:
            - "myView"
            - "timezone"
            - "apiToken"
            - mailer:
                emailAddress: "antman@antlinux.local"
            - preferredProvider:
                providerId: "default"
  slaveAgentPort: 50000
  updateCenter:
    sites:
      - id: "default"
        url: "https://updates.jenkins.io/update-center.json"
  views:
    - all:
        name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
unclassified:
  bitbucketEndpointConfiguration:
    endpoints:
      - bitbucketCloudEndpoint:
          enableCache: false
          manageHooks: false
          repositoriesCacheDuration: 0
          teamCacheDuration: 0
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
  casCGlobalConfig:
    configurationPath: "/tmp/baseline.yaml"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  globalLibraries:
    libraries:
      - defaultVersion: "main"
        name: "jenkins-shared-lib"
        retriever:
          modernSCM:
            scm:
              git:
                id: "1c85d9ac-3326-4e95-b5a3-737b601e701a"
                remote: "https://github.com/antman25/jenkins-shared-lib.git"
                traits:
                  - "gitBranchDiscovery"
  hashicorpVault:
    configuration:
      engineVersion: 2
      timeout: 60
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://jenkins.antlinux.local:31039/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
tool:
  git:
    installations:
      - home: "git"
        name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
jobs:
  - script: >
      multibranchPipelineJob("deploy-jenkins-jobs")
      {
          displayName("000 - Deploy Production Jenkins Jobs")
          description("Use this job to deploy production jenkins jobs")


          branchSources {
              branchSource {
                  source {
                      git {
                          remote ('https://github.com/antman25/jenkins-shared-lib.git')
                          // all id's must be unique according to docs
                          id ('deploy-production-jobs-source-id')
                          traits {
                              gitBranchDiscovery()

                              headRegexFilter
                              {
                                  regex('^(.*main).*$')
                              }
                          }
                      }
                  }
                  strategy {
                      allBranchesSame {
                          props {
                              suppressAutomaticTriggering {
                                  triggeredBranchesRegex ('^(.*main).*$')
                              }
                          }
                      }
                  }
              }
          }
          orphanedItemStrategy {
              discardOldItems {
                  numToKeep(20)
              }
          }
          factory {
              workflowBranchProjectFactory {
                  scriptPath('Jenkinsfile')
              }
          }
          triggers {
            periodicFolderTrigger {
              interval("1h")
            }
          }
      }