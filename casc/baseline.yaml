credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              description: "Credentials used by Bitbucket plugin"
              id: "bitbucket-plugin-cred"
              password: not-real-password
              scope: SYSTEM
              username: "jenkins"
jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  authorizationStrategy:
    projectMatrix:
      permissions:
        - "GROUP:Overall/Read:authenticated"
        - "USER:Overall/Administer:admin"
        - "USER:Overall/Administer:antman"

  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  globalNodeProperties:
    - envVars:
        env:
          - key: "DELIVERY_BRANCH"
            value: "main"
          - key: "JOB_TESTING_ROOT"
            value: "job-testing"
          - key: "TOOLS_URL"
            value: "https://github.com/antman25/jenkins-shared-lib.git"
          - key: "TOOLS_URL_TESTING"
            value: "http://10.0.0.35/scm/pip/jenkins-shared-lib.git"
  labelAtoms:
    - name: "built-in"
    - name: "jenkins-jenkins-agent"
  markupFormatter: "plainText"
  mode: EXCLUSIVE
  myViewsTabBar: "standard"
  noUsageStatistics: true
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 10
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
        - id: "admin"
          name: "Jenkins Admin"
          properties:
            - "apiToken"
            - "mailer"
            - "myView"
            - preferredProvider:
                providerId: "default"
            - "timezone"
  slaveAgentPort: 50000
  updateCenter:
    sites:
      - id: "default"
        url: "https://updates.jenkins.io/update-center.json"
  views:
    - all:
        name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  envInject:
    enableLoadingFromMaster: false
    enablePermissions: false
    hideInjectedVars: false
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  globalJobDslSecurityConfiguration:
    useScriptSecurity: false
  sSHD:
    port: -1
  scriptApproval:
    approvedSignatures:
      - "method org.jenkinsci.plugins.workflow.support.actions.EnvironmentAction getEnvironment"
      - "method org.yaml.snakeyaml.Yaml load java.lang.String"
      - "new org.yaml.snakeyaml.Yaml"
unclassified:
  bitbucketEndpointConfiguration:
    endpoints:
      - bitbucketServerEndpoint:
          bitbucketJenkinsRootUrl: "http://10.0.0.50:8080/"
          credentialsId: "bitbucket-plugin-cred"
          displayName: "Bitbucket Server"
          manageHooks: true
          serverUrl: "http://10.0.0.35"
          webhookImplementation: NATIVE
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
  casCGlobalConfig:
    configurationPath: "/tmp/baseline.yaml"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitSCM:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  hashicorpVault:
    configuration:
      engineVersion: 2
      timeout: 60
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://10.0.0.50:8080/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
tool:
  git:
    installations:
      - home: "git"
        name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
jobs:
  - script: >
      
      
      folder('seed-job') {
        properties {
          folderProperties {
            properties {
              stringProperty {
                key('TENANT')
                value("PIP")
              }
            }
          }
        }
      }
      
      pipelineJob('seed-job/simple-test')
      {
        displayName("Test K8S Agent")
        description("Simple test to exercise spinning up a k8s agent pod")
        definition {
          cpsFlowDefinition {

              script("podTemplate { node(POD_LABEL) { stage('test') { sh 'echo test' } } }")
              sandbox(true)
          }
        }
      }
      
      pipelineJob("seed-job/gitlab") {
          displayName("Temporary Seed Job - Github Source")
          description("Seed job used to bootstrap")

          environmentVariables {
              env('BRANCH_NAME', 'main')
              env('TOOLS_URL', 'https://github.com/antman25/jenkins-shared-lib.git')
          }
          properties {
            disableConcurrentBuilds {}
          }

          definition {
            cpsScm {
              scm {
                git {
                  remote { url('https://github.com/antman25/jenkins-shared-lib.git') }
                  branches('main')
                  scriptPath('Jenkinsfile')
                  extensions { }  // required as otherwise it may try to tag the repo, which you may not want
                }
              }
            }
          }
      }
      
      pipelineJob("seed-job/bitbucket") {
          displayName("!!! Temporary Seed Job - Bitbucket URL !!!")
          description("Seed job used to bootstrap")

          environmentVariables {
              env('BRANCH_NAME', 'main')
              env('TOOLS_URL', 'http://10.0.0.222:7990/scm/pip/jenkins-shared-lib.git')
          }
          properties {
            disableConcurrentBuilds {}
          }

          definition {
            cpsScm {
              scm {
                git {
                  remote { url('http://10.0.0.35/scm/pip/jenkins-shared-lib.git') }
                  branches('main')
                  scriptPath('Jenkinsfile')
                  extensions { }  // required as otherwise it may try to tag the repo, which you may not want
                }
              }
            }
          }
      }
      
