try
{
    library "jenkins-shared-lib@${BRANCH_NAME}"
    println("Loaded jenkins-shared-lib from branch: ${BRANCH_NAME}")
}
catch (Exception ex)
{
    println("Problem using BRANCH_NAME, trying main")
    library "jenkins-shared-lib@main"
}

podTemplates.dockerTemplate {
    node(POD_LABEL)
    {
        config = ['registry': 'fake-registry.local', 'repository' : 'fake-repo']

        stage ('Clone Code')
        {
            checkout scm

            config += utils.getConfig()

            def git_sha = utils.getLongCommit()
            config.commitHash = git_sha
            config.commitShortHash = git_sha.take(8)
            utils.dumpConfig(config)
        }

        stage ('run buildDockerImage step')
        {
            def test_image = buildDockerImage (config)
            println("test_image: ${test_image}")
            utils.dumpConfig(config)
        }
    }
}